//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Mail/MFMailAccount.h>

#import "MCRemoteStoreAccount.h"

@class MCAuthScheme, MFBehaviorTracker, NSArray, NSMutableArray, NSOperationQueue, NSString;

@interface MFRemoteStoreAccount : MFMailAccount <MCRemoteStoreAccount>
{
    NSMutableArray *_mailboxesToSynchronize;
    BOOL _synchronizationThreadIsRunning;
    BOOL _addedEAToAccountFolder;
}

+ (BOOL)cachePoliciesNeedUpdating;
@property BOOL addedEAToAccountFolder; // @synthesize addedEAToAccountFolder=_addedEAToAccountFolder;
@property BOOL synchronizationThreadIsRunning; // @synthesize synchronizationThreadIsRunning=_synchronizationThreadIsRunning;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *offlineCacheDirectory;
- (void)_checkForNewMessagesInStore:(id)arg1;
- (void)_synchronizeMailboxesSynchronously;
- (BOOL)_shouldSynchronizeMailbox:(id)arg1;
- (id)mailboxNamesToSynchronize;
@property(readonly, copy) NSArray *mailboxURLStringsToSynchronize;
- (void)_removeAllMailboxesToSynchronize;
- (id)_popMailboxToSynchronize;
- (BOOL)_addMailboxesToSynchronize:(id)arg1;
- (void)didSynchronizeMailboxCachesAndFoundChanges:(BOOL)arg1;
- (BOOL)synchronizesDataWithServer;
- (BOOL)_synchronizeMailboxListHighPriority:(BOOL)arg1;
- (void)_synchronizeAccountWithServerHighPriority:(id)arg1;
- (void)resetNeedToSynchronizeMailboxCaches;
@property(readonly, nonatomic) BOOL needToSynchronizeMailboxCaches;
- (void)_startBackgroundSynchronizationHighPriority:(BOOL)arg1;
- (void)startBackgroundSynchronization;
- (void)considerSynchronizingNow;
- (BOOL)canBeSynchronized;
- (BOOL)shouldCacheAggressively;
- (void)_writeMailboxCache;
- (BOOL)_canEmptyMessagesFromMailbox:(id)arg1;
- (void)_setSpecialMailbox:(id)arg1 forType:(int)arg2;
- (id)_specialMailboxWithType:(int)arg1 create:(BOOL)arg2 isLocal:(BOOL)arg3;
- (id)_specialMailboxWithType:(int)arg1 create:(BOOL)arg2;
- (id)_localMailboxRelativePathForType:(int)arg1 usingDisplayName:(id)arg2;
- (void)_renameLocalSpecialMailboxesToName:(id)arg1;
- (BOOL)_setStoreSpecialMailboxType:(int)arg1 onServer:(BOOL)arg2;
- (BOOL)_isMailboxTypeStoredLocally:(int)arg1;
@property BOOL storeTrashOnServer;
@property BOOL storeSentMessagesOnServer;
@property BOOL storeJunkOnServer;
@property BOOL storeDraftsOnServer;
- (BOOL)shouldCacheAttachmentsForMessageWithDateReceived:(id)arg1;
@property long long cachePolicy;
- (BOOL)canGoOffline;
- (void)fetchSynchronously;
@property(copy) NSString *displayName;
@property(readonly) MFBehaviorTracker *behaviorTracker;
- (id)initWithSystemAccount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *accountTypeString;
@property BOOL allowInsecureAuthentication;
@property(readonly, copy) NSString *appleAuthenticationToken;
@property(readonly, copy) NSString *applePersonID;
@property(copy) NSString *authenticationScheme;
@property(copy) NSString *canonicalEmailAddress;
@property BOOL configureDynamically;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSString *externalHostname;
@property(readonly) unsigned long long hash;
@property(copy) NSString *hostname;
@property(readonly, copy) NSString *identifier;
@property(readonly, nonatomic) BOOL isGmailAccount;
@property(readonly, copy) NSString *oauthToken;
@property(copy) NSString *password;
@property long long portNumber;
@property(retain) MCAuthScheme *preferredAuthScheme;
@property(readonly, nonatomic) NSOperationQueue *remoteFetchQueue;
@property(readonly, nonatomic) NSOperationQueue *remoteTaskQueue;
@property(readonly, nonatomic) BOOL requiresAuthentication;
@property(readonly, copy, nonatomic) NSString *saslProfileName;
@property long long securityLayerType;
@property BOOL shouldUseAuthentication;
@property(readonly, copy, nonatomic) NSArray *standardPorts;
@property(readonly, copy, nonatomic) NSArray *standardSSLPorts;
@property(readonly) Class superclass;
@property(copy) NSString *username;
@property BOOL usesSSL;

@end

